{
  "title": "Invoice builder",
  "description": "This is a invoice builder app.",
  "license": {
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "version": "1.0.0",
  "host": "localhost:3000",
  "basePath": "/api",
  "swagger": "2.0",
  "tags": [
    {
      "name": "users",
      "description": "API for Users"
    },
    {
      "name": "invoices",
      "description": "API for invoice"
    },
    {
      "name": "clients",
      "description": "API for clients"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login for user",
        "description": "Login for user",
        "parameters": [
          {
            "name": "User Login",
            "description": "User Login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": "#definitions/UserLogin"
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "create new user",
        "description": "create new user in the system",
        "parameters": [
          {
            "name": "Create User",
            "description": "User creation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Users"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new client is created",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      }
    },
    "/invoices": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "create new invoice",
        "description": "create new invoice in the system",
        "parameters": [
          {
            "name": "Create Invoice",
            "description": "Invoice creation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          },
          {
            "name": "Authorization",
            "description": "Access token to autherize the user",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#definitions/Authorization"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new invoice is created",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "getting all invoices data from db",
        "description": "all invoices",
        "parameters": [
          {
            "name": "page",
            "type": "integer",
            "description": "set the page for pagination",
            "in": "query"
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "set the limit of data pagination",
            "in": "query"
          },
          {
            "name": "sortItem",
            "type": "string",
            "description": "Type the column name you need to sort",
            "in": "query"
          },
          {
            "name": "sortOrder",
            "type": "string",
            "description": "Mention asc or desc",
            "in": "query"
          },
          {
            "name": "Authorization",
            "description": "Access token to autherize the user",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#definitions/Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": "#definitions/getInvoices"
          }
        }
      }
    },
    "/invoices/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Id of the Invoice",
          "type": "string"
        },
        {
          "name": "Authorization",
          "description": "Access token to autherize the user",
          "in": "header",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Find the Invoice by id",
        "summary": "Find single Invoice",
        "responses": {
          "200": {
            "description": "Invoice has found",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "description": "Delete the Invoice by id",
        "summary": "Delete single Invoice",
        "responses": {
          "200": {
            "description": "Invoice has deleted",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Update an Invoice",
        "description": "Update Invoice in the System",
        "parameters": [
          {
            "name": "invoice",
            "description": "Invoice that we want to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/UpdateInvoice"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Invoice is updated",
            "schema": {
              "$ref": "#definitions/UpdateInvoice"
            }
          }
        }
      }
    },
    "/clients": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "create new client",
        "description": "create new invoice in the system",
        "parameters": [
          {
            "name": "Create Clients",
            "description": "Client creation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Clients"
            }
          },
          {
            "name": "Authorization",
            "description": "Access token to autherize the user",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#definitions/Authorization"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new client is created",
            "schema": {
              "$ref": "#definitions/Clients"
            }
          }
        }
      },
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "getting all clients data from db",
        "description": "all clients",
        "parameters": [
          {
            "name": "Authorization",
            "description": "Access token to autherize the user",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#definitions/Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/clients/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Id of the Clients",
          "type": "string"
        },
        {
          "name": "Authorization",
          "description": "Access token to autherize the user",
          "in": "header",
          "required": true,
          "schema": {
            "$ref": "#definitions/Authorization"
          }
        }
      ],
      "get": {
        "tags": [
          "clients"
        ],
        "description": "Find the Clients by id",
        "summary": "Find single Clients",
        "responses": {
          "200": {
            "description": "Clients has found",
            "schema": {
              "$ref": "#definitions/Clients"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "description": "Delete the Client by id",
        "summary": "Delete single Client",
        "responses": {
          "200": {
            "description": "Client has deleted",
            "schema": {
              "$ref": "#definitions/Clients"
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update an Invoice",
        "description": "Update Invoice in the System",
        "parameters": [
          {
            "name": "client",
            "description": "Client that we want to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/UpdateClient"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client is updated",
            "schema": {
              "$ref": "#definitions/UpdateClient"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Invoice": {
      "required": [
        "item",
        "qty",
        "date"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "item": {
          "type": "string"
        },
        "qty": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "rate": {
          "type": "number"
        },
        "tax": {
          "type": "number"
        },
        "due": {
          "type": "string",
          "format": "date"
        },
        "client": {
          "type": "string"
        }
      }
    },
    "UpdateInvoice": {
      "properties": {
        "item": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "due": {
          "type": "string",
          "format": "date"
        },
        "rate": {
          "type": "number",
          "format": "float"
        },
        "tax": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "getInvoices": {
      "properties": {
        "docs": {
          "type": "array",
          "$ref": "#definitions/Invoice"
        },
        "total": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        }
      }
    },
    "Clients": {
      "required": [
        "firstName",
        "lastName",
        "email"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "UpdateClient": {
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Users": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "properties": {
        "success": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "UserSignUp": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Authorization": {
      "required": [
        "Authorization"
      ],
      "properties": {
        "Authorization": {
          "type": "string"
        }
      }
    }
  }
}